{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\Build-Ledger\\\\build-ledger-frontend\\\\src\\\\ledger\\\\income\\\\IncomesTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport ApartmentComponent from './ApartmentComponent';\nimport UpdateApartment from './UpdateApartment'; // Импортираме UpdateApartment компонента\nimport './Apartment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncomesTable = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Функция за презареждане на апартаментите\n  const fetchApartmentsAndFloors = async () => {\n    console.log(`Fetching apartments and floors for cooperation ${id}`);\n    try {\n      const [apartmentsResponse, floorsResponse] = await Promise.all([axios.get(`http://localhost:8080/apartments/${id}`), axios.get(`http://localhost:8080/floors/${id}`)]);\n      setApartments(apartmentsResponse.data);\n      setFloors(floorsResponse.data);\n      console.log(\"Apartments:\", apartmentsResponse.data);\n      console.log(\"Floors:\", floorsResponse.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch apartments and floors.');\n    }\n  };\n  useEffect(() => {\n    fetchApartmentsAndFloors();\n  }, [id]);\n  const handleAddApartment = apartment => {\n    setSelectedApartment(apartment);\n  };\n  const handleCloseModal = () => {\n    setSelectedApartment(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Apartments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apartment-container\",\n      children: apartments.map(apartment => {\n        // Намираме съответния етаж по `floorId`\n        const floor = floors.find(floor => floor.id === apartment.floorId);\n        const floorNumber = floor ? floor.number : 'Unknown'; // Показваме номера на етажа или 'Unknown', ако няма етаж\n\n        return /*#__PURE__*/_jsxDEV(ApartmentComponent, {\n          apartment: apartment,\n          projectTitle: `Cooperation ${id}`,\n          floorNumber: floorNumber // Предаваме номера на етажа\n          ,\n          onAddApartment: () => handleAddApartment(apartment)\n        }, apartment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), selectedApartment && /*#__PURE__*/_jsxDEV(UpdateApartment, {\n      show: !!selectedApartment,\n      handleClose: handleCloseModal,\n      apartmentNumber: selectedApartment.number,\n      cooperationNumber: id,\n      floors: floors,\n      apartmentId: selectedApartment.id,\n      refreshApartments: fetchApartmentsAndFloors // Предаваме функцията за презареждане\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(IncomesTable, \"jBhyhCnGnTynLG86SR547tPdgyU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = IncomesTable;\nexport default IncomesTable;\nvar _c;\n$RefreshReg$(_c, \"IncomesTable\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","ApartmentComponent","UpdateApartment","jsxDEV","_jsxDEV","IncomesTable","_s","id","navigate","fetchApartmentsAndFloors","console","log","apartmentsResponse","floorsResponse","Promise","all","get","setApartments","data","setFloors","err","error","setError","handleAddApartment","apartment","setSelectedApartment","handleCloseModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","apartments","map","floor","floors","find","floorId","floorNumber","number","projectTitle","onAddApartment","selectedApartment","show","handleClose","apartmentNumber","cooperationNumber","apartmentId","refreshApartments","_c","$RefreshReg$"],"sources":["C:/father project/Build-Ledger/build-ledger-frontend/src/ledger/income/IncomesTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ApartmentComponent from './ApartmentComponent';\r\nimport UpdateApartment from './UpdateApartment'; // Импортираме UpdateApartment компонента\r\nimport './Apartment.css';\r\n\r\nconst IncomesTable = () => {\r\n    const { id } = useParams();\r\n   \r\n    const navigate = useNavigate();\r\n\r\n    // Функция за презареждане на апартаментите\r\n    const fetchApartmentsAndFloors = async () => {\r\n        console.log(`Fetching apartments and floors for cooperation ${id}`);\r\n        try {\r\n            const [apartmentsResponse, floorsResponse] = await Promise.all([\r\n                axios.get(`http://localhost:8080/apartments/${id}`),\r\n                axios.get(`http://localhost:8080/floors/${id}`)\r\n            ]);\r\n\r\n            setApartments(apartmentsResponse.data);\r\n            setFloors(floorsResponse.data);\r\n            console.log(\"Apartments:\", apartmentsResponse.data);\r\n            console.log(\"Floors:\", floorsResponse.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch apartments and floors.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchApartmentsAndFloors();\r\n    }, [id]);\r\n\r\n    const handleAddApartment = (apartment) => {\r\n        setSelectedApartment(apartment);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setSelectedApartment(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Apartments</h1>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            <div className=\"apartment-container\">\r\n                {apartments.map(apartment => {\r\n                    // Намираме съответния етаж по `floorId`\r\n                    const floor = floors.find(floor => floor.id === apartment.floorId);\r\n                    const floorNumber = floor ? floor.number : 'Unknown'; // Показваме номера на етажа или 'Unknown', ако няма етаж\r\n    \r\n                    return (\r\n                        <ApartmentComponent\r\n                            key={apartment.id}\r\n                            apartment={apartment}\r\n                            projectTitle={`Cooperation ${id}`}\r\n                            floorNumber={floorNumber} // Предаваме номера на етажа\r\n                            onAddApartment={() => handleAddApartment(apartment)}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n    \r\n            {selectedApartment && (\r\n                <UpdateApartment\r\n                    show={!!selectedApartment}\r\n                    handleClose={handleCloseModal}\r\n                    apartmentNumber={selectedApartment.number}\r\n                    cooperationNumber={id}\r\n                    floors={floors}\r\n                    apartmentId={selectedApartment.id}\r\n                    refreshApartments={fetchApartmentsAndFloors} // Предаваме функцията за презареждане\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IncomesTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}