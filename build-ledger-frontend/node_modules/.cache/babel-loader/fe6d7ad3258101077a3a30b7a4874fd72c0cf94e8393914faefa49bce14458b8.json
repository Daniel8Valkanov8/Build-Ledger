{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\frontend\\\\build-ledger-frontend\\\\src\\\\all-projects\\\\IndividualProjectTemplate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; // Импорт на useParams за получаване на параметъра от URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualProjectTemplate = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Взимаме ID на проекта от URL параметрите\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    const fetchProject = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/projects/${id}`); // GET заявка за конкретния проект\n        const data = await response.json();\n        setProject(data); // Запазваме данните за проекта в state\n      } catch (error) {\n        console.error('Error fetching project:', error);\n      }\n    };\n    fetchProject();\n  }, [id]);\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading project...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Project: \", project.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Project ID: \", project.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"EIK: \", project.eik]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Start Date: \", project.startDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"End Date: \", project.endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Building Status: \", project.buildingStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Parcel: \", project.endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(IndividualProjectTemplate, \"bW+i+zKpwLJkvO39JnqWTq0Tnns=\", false, function () {\n  return [useParams];\n});\n_c = IndividualProjectTemplate;\nexport default IndividualProjectTemplate;\nvar _c;\n$RefreshReg$(_c, \"IndividualProjectTemplate\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","IndividualProjectTemplate","_s","id","project","setProject","fetchProject","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","eik","startDate","endDate","buildingStatus","_c","$RefreshReg$"],"sources":["C:/father project/software/frontend/build-ledger-frontend/src/all-projects/IndividualProjectTemplate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'; // Импорт на useParams за получаване на параметъра от URL\r\n\r\nconst IndividualProjectTemplate = () => {\r\n    const { id } = useParams(); // Взимаме ID на проекта от URL параметрите\r\n    const [project, setProject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProject = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/projects/${id}`); // GET заявка за конкретния проект\r\n                const data = await response.json();\r\n                setProject(data); // Запазваме данните за проекта в state\r\n            } catch (error) {\r\n                console.error('Error fetching project:', error);\r\n            }\r\n        };\r\n\r\n        fetchProject();\r\n    }, [id]);\r\n\r\n    if (!project) {\r\n        return <p>Loading project...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Project: {project.title}</h1> {/* Визуализиране на заглавието на проекта */}\r\n            {/* Тук можеш да добавиш и други полета за проекта */}\r\n            <p>Project ID: {project.id}</p>\r\n            <p>EIK: {project.eik}</p>\r\n            <p>Start Date: {project.startDate}</p>\r\n            <p>End Date: {project.endDate}</p>\r\n            <p>Building Status: {project.buildingStatus}</p>\r\n            <p>Parcel: {project.endDate}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndividualProjectTemplate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCL,EAAE,EAAE,CAAC,CAAC,CAAC;QACtE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDL,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,OAAO,EAAE;IACV,oBAAOJ,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,WAAS,EAACT,OAAO,CAACc,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAElCjB,OAAA;MAAAa,QAAA,GAAG,cAAY,EAACT,OAAO,CAACD,EAAE;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,GAAG,OAAK,EAACT,OAAO,CAACe,GAAG;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAAa,QAAA,GAAG,cAAY,EAACT,OAAO,CAACgB,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjB,OAAA;MAAAa,QAAA,GAAG,YAAU,EAACT,OAAO,CAACiB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCjB,OAAA;MAAAa,QAAA,GAAG,mBAAiB,EAACT,OAAO,CAACkB,cAAc;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDjB,OAAA;MAAAa,QAAA,GAAG,UAAQ,EAACT,OAAO,CAACiB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAACf,EAAA,CAlCID,yBAAyB;EAAA,QACZH,SAAS;AAAA;AAAAyB,EAAA,GADtBtB,yBAAyB;AAoC/B,eAAeA,yBAAyB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}