{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\Build-Ledger\\\\build-ledger-frontend\\\\src\\\\ledger\\\\sell\\\\PaymentContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CreateSell.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentContent = ({\n  formData,\n  handleInputChange,\n  paymentSchemas,\n  success,\n  totalPrice\n}) => {\n  _s();\n  const [selectedSchema, setSelectedSchema] = useState(null);\n  const [installments, setInstallments] = useState([]);\n  useEffect(() => {\n    if (selectedSchema && totalPrice) {\n      // Изчисляваме вноските на база процентите и общата цена (след отстъпка)\n      const newInstallments = selectedSchema.percentOfInstallments.map(percent => {\n        const calculatedAmount = totalPrice * percent / 100;\n        return Math.round(calculatedAmount * 100) / 100;\n      });\n      setInstallments(newInstallments);\n    }\n  }, [selectedSchema, totalPrice]);\n  const handlePaymentSchemaChange = e => {\n    const selectedSchemaId = e.target.value;\n    const schema = paymentSchemas.find(s => s.id === parseInt(selectedSchemaId));\n    setSelectedSchema(schema);\n    if (schema) {\n      const initialInstallments = Array(schema.installmentCount).fill('');\n      setInstallments(initialInstallments);\n    } else {\n      setInstallments([]);\n    }\n    handleInputChange(e);\n  };\n  const handleInstallmentChange = (index, value) => {\n    const newInstallments = [...installments];\n    newInstallments[index] = value;\n    setInstallments(newInstallments);\n    const updatedInstallments = newInstallments.join(',');\n    handleInputChange({\n      target: {\n        name: 'installments',\n        value: updatedInstallments\n      }\n    });\n  };\n  const handleDateChange = (date, name) => {\n    handleInputChange({\n      target: {\n        name,\n        value: date\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contract-purchaser-broker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contract-container\",\n      children: [success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentSchema\",\n          children: \"Payment Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"paymentSchema\",\n          name: \"paymentSchemaId\",\n          value: formData.paymentSchemaId,\n          onChange: handlePaymentSchemaChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a payment schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), paymentSchemas.length > 0 ? paymentSchemas.map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: schema.id,\n            children: schema.title\n          }, schema.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Loading payment schemas...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"purchaser-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"purchaserFirstName\",\n        children: \"Installments and Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), selectedSchema && installments.map((installment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `installment${index + 1}`,\n          children: [\"Installment \", index + 1, \" (\", selectedSchema.percentOfInstallments[index], \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: `installment${index + 1}`,\n          name: `installment${index + 1}`,\n          placeholder: \"\\u20AC\",\n          value: installment,\n          onChange: e => handleInstallmentChange(index, e.target.value) // Позволяваме ръчна корекция\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `installmentDate${index + 1}`,\n            children: \"Installment Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: formData[`installmentDate${index + 1}`],\n            onChange: date => handleDateChange(date, `installmentDate${index + 1}`),\n            dateFormat: \"dd/MM/yyyy\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentContent, \"a9yb7tbbEtIhYwJz/ocTMRLJciQ=\");\n_c = PaymentContent;\nexport default PaymentContent;\nvar _c;\n$RefreshReg$(_c, \"PaymentContent\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","jsxDEV","_jsxDEV","PaymentContent","formData","handleInputChange","paymentSchemas","success","totalPrice","_s","selectedSchema","setSelectedSchema","installments","setInstallments","newInstallments","percentOfInstallments","map","percent","calculatedAmount","Math","round","handlePaymentSchemaChange","e","selectedSchemaId","target","value","schema","find","s","id","parseInt","initialInstallments","Array","installmentCount","fill","handleInstallmentChange","index","updatedInstallments","join","name","handleDateChange","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","paymentSchemaId","onChange","length","title","disabled","installment","type","placeholder","selected","dateFormat","_c","$RefreshReg$"],"sources":["C:/father project/Build-Ledger/build-ledger-frontend/src/ledger/sell/PaymentContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CreateSell.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst PaymentContent = ({ formData, handleInputChange, paymentSchemas, success, totalPrice }) => {\r\n    const [selectedSchema, setSelectedSchema] = useState(null);\r\n    const [installments, setInstallments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (selectedSchema && totalPrice) {\r\n            // Изчисляваме вноските на база процентите и общата цена (след отстъпка)\r\n            const newInstallments = selectedSchema.percentOfInstallments.map(percent => {\r\n                const calculatedAmount = (totalPrice * percent) / 100;\r\n                return Math.round(calculatedAmount * 100) / 100;\r\n            });\r\n            setInstallments(newInstallments);\r\n        }\r\n    }, [selectedSchema, totalPrice]);\r\n\r\n    const handlePaymentSchemaChange = (e) => {\r\n        const selectedSchemaId = e.target.value;\r\n        const schema = paymentSchemas.find(s => s.id === parseInt(selectedSchemaId));\r\n        setSelectedSchema(schema);\r\n\r\n        if (schema) {\r\n            const initialInstallments = Array(schema.installmentCount).fill('');\r\n            setInstallments(initialInstallments);\r\n        } else {\r\n            setInstallments([]);\r\n        }\r\n\r\n        handleInputChange(e);\r\n    };\r\n\r\n    const handleInstallmentChange = (index, value) => {\r\n        const newInstallments = [...installments];\r\n        newInstallments[index] = value;\r\n        setInstallments(newInstallments);\r\n\r\n        const updatedInstallments = newInstallments.join(',');\r\n        handleInputChange({ target: { name: 'installments', value: updatedInstallments } });\r\n    };\r\n\r\n    const handleDateChange = (date, name) => {\r\n        handleInputChange({ target: { name, value: date } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"contract-purchaser-broker-container\">\r\n            <div className=\"contract-container\">\r\n                {success && <div className=\"alert alert-success\">{success}</div>}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"paymentSchema\">Payment Schema</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"paymentSchema\"\r\n                        name=\"paymentSchemaId\"\r\n                        value={formData.paymentSchemaId}\r\n                        onChange={handlePaymentSchemaChange}\r\n                    >\r\n                        <option value=\"\">Select a payment schema</option>\r\n                        {paymentSchemas.length > 0 ? (\r\n                            paymentSchemas.map((schema) => (\r\n                                <option key={schema.id} value={schema.id}>\r\n                                    {schema.title}\r\n                                </option>\r\n                            ))\r\n                        ) : (\r\n                            <option value=\"\" disabled>Loading payment schemas...</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"purchaser-container\">\r\n                <label htmlFor=\"purchaserFirstName\">Installments and Dates</label>\r\n\r\n                {selectedSchema && installments.map((installment, index) => (\r\n                    <div className=\"form-group\" key={index}>\r\n                        <label htmlFor={`installment${index + 1}`}>\r\n                            Installment {index + 1} ({selectedSchema.percentOfInstallments[index]}%)\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id={`installment${index + 1}`}\r\n                            name={`installment${index + 1}`}\r\n                            placeholder=\"€\"\r\n                            value={installment}\r\n                            onChange={(e) => handleInstallmentChange(index, e.target.value)} // Позволяваме ръчна корекция\r\n                        />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor={`installmentDate${index + 1}`}>Installment Date</label>\r\n                            <DatePicker\r\n                                selected={formData[`installmentDate${index + 1}`]}\r\n                                onChange={(date) => handleDateChange(date, `installmentDate${index + 1}`)}\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}