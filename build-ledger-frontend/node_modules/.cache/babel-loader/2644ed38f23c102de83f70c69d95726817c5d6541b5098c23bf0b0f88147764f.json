{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CreateSell.css';\nimport axios from 'axios';\nimport PaymentContent from './PaymentContent';\n\n// CreateSell.js\nconst createSell = async () => {\n  try {\n    const dataToSend = {\n      ...formData,\n      installments: formData.installments.map(installment => ({\n        installment: installment.installment,\n        sumInEuros: parseFloat(installment.sumInEuros),\n        date: installment.date ? installment.date.toISOString().split('T')[0] : null // Формат YYYY-MM-DD\n      }))\n    };\n    const response = await axios.post(`http://localhost:8080/cooperation/${id}/create-sell`, dataToSend, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('POST request successful', response.data);\n    setSuccess('Sell created successfully!');\n  } catch (error) {\n    console.error('Error creating sell', error);\n    setSuccess(null);\n  }\n};\nexport default CreateSell;","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","PaymentContent","createSell","dataToSend","formData","installments","map","installment","sumInEuros","parseFloat","date","toISOString","split","response","post","id","headers","console","log","data","setSuccess","error","CreateSell"],"sources":["C:/father project/Build-Ledger/build-ledger-frontend/src/ledger/sell/CreateSell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CreateSell.css';\r\nimport axios from 'axios';\r\nimport PaymentContent from './PaymentContent';\r\n\r\n// CreateSell.js\r\nconst createSell = async () => {\r\n    try {\r\n        const dataToSend = {\r\n            ...formData,\r\n            installments: formData.installments.map(installment => ({\r\n                installment: installment.installment,\r\n                sumInEuros: parseFloat(installment.sumInEuros),\r\n                date: installment.date ? installment.date.toISOString().split('T')[0] : null  // Формат YYYY-MM-DD\r\n            }))\r\n        };\r\n\r\n        const response = await axios.post(\r\n            `http://localhost:8080/cooperation/${id}/create-sell`,\r\n            dataToSend,\r\n            {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n        );\r\n\r\n        console.log('POST request successful', response.data);\r\n        setSuccess('Sell created successfully!');\r\n    } catch (error) {\r\n        console.error('Error creating sell', error);\r\n        setSuccess(null);\r\n    }\r\n};\r\n\r\nexport default CreateSell;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,IAAI;IACA,MAAMC,UAAU,GAAG;MACf,GAAGC,QAAQ;MACXC,YAAY,EAAED,QAAQ,CAACC,YAAY,CAACC,GAAG,CAACC,WAAW,KAAK;QACpDA,WAAW,EAAEA,WAAW,CAACA,WAAW;QACpCC,UAAU,EAAEC,UAAU,CAACF,WAAW,CAACC,UAAU,CAAC;QAC9CE,IAAI,EAAEH,WAAW,CAACG,IAAI,GAAGH,WAAW,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE;MAClF,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC7B,qCAAqCC,EAAE,cAAc,EACrDZ,UAAU,EACV;MACIa,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CACJ,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,QAAQ,CAACM,IAAI,CAAC;IACrDC,UAAU,CAAC,4BAA4B,CAAC;EAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3CD,UAAU,CAAC,IAAI,CAAC;EACpB;AACJ,CAAC;AAED,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}