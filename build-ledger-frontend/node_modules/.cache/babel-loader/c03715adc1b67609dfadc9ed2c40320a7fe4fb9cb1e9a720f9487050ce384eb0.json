{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\frontend\\\\build-ledger-frontend\\\\src\\\\parcel\\\\ParcelTemplate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParcelTemplate = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Вземете ID-то на парцела от URL параметрите\n  const [parcel, setParcel] = useState(null);\n  useEffect(() => {\n    // Функция за извличане на данни\n    const fetchParcel = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/parcels/${id}`); // Извлечете данните от API-то\n        setParcel(response.data); // Запазете данните в състоянието на компонента\n      } catch (error) {\n        console.error('Error fetching parcel data:', error);\n      }\n    };\n    fetchParcel(); // Извикайте функцията за извличане на данни\n  }, [id]);\n  if (!parcel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this); // Покажете съобщение за зареждане, докато данните се извличат\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"In parcel of project: \", parcel.projectTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ParcelTemplate, \"Seirhat/ZWbM8kzDQCxS+Ul0S5E=\", false, function () {\n  return [useParams];\n});\n_c = ParcelTemplate;\nexport default ParcelTemplate;\nvar _c;\n$RefreshReg$(_c, \"ParcelTemplate\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ParcelTemplate","_s","id","parcel","setParcel","fetchParcel","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","projectTitle","_c","$RefreshReg$"],"sources":["C:/father project/software/frontend/build-ledger-frontend/src/parcel/ParcelTemplate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ParcelTemplate = () => {\r\n    const { id } = useParams(); // Вземете ID-то на парцела от URL параметрите\r\n    const [parcel, setParcel] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Функция за извличане на данни\r\n        const fetchParcel = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/parcels/${id}`); // Извлечете данните от API-то\r\n                setParcel(response.data); // Запазете данните в състоянието на компонента\r\n            } catch (error) {\r\n                console.error('Error fetching parcel data:', error);\r\n            }\r\n        };\r\n\r\n        fetchParcel(); // Извикайте функцията за извличане на данни\r\n    }, [id]);\r\n\r\n    if (!parcel) {\r\n        return <div>Loading...</div>; // Покажете съобщение за зареждане, докато данните се извличат\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>In parcel of project: {parcel.projectTitle}</h1>\r\n            {/* Добавете повече информация за парцела тук */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParcelTemplate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiCL,EAAE,EAAE,CAAC,CAAC,CAAC;QACzEE,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDJ,WAAW,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,MAAM,EAAE;IACT,oBAAOJ,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,oBACIhB,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAAY,QAAA,GAAI,wBAAsB,EAACR,MAAM,CAACa,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnD,CAAC;AAEd,CAAC;AAACd,EAAA,CA5BID,cAAc;EAAA,QACDJ,SAAS;AAAA;AAAAqB,EAAA,GADtBjB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}