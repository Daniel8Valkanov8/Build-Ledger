{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\Build-Ledger\\\\build-ledger-frontend\\\\src\\\\ledger\\\\sell\\\\PaymentContent.js\",\n  _s = $RefreshSig$();\n// PaymentContent.js\nimport React, { useState } from 'react';\nimport './CreateSell.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentContent = ({\n  formData,\n  handleInputChange,\n  paymentSchemas,\n  success,\n  handleInstallmentsChange\n}) => {\n  _s();\n  const [selectedSchema, setSelectedSchema] = useState(null);\n  const [installments, setInstallments] = useState([]);\n  const handlePaymentSchemaChange = e => {\n    const selectedSchemaId = e.target.value;\n    const schema = paymentSchemas.find(s => s.id === parseInt(selectedSchemaId));\n    setSelectedSchema(schema);\n    if (schema) {\n      const initialInstallments = Array(schema.installmentCount).fill({\n        sumInEuros: '',\n        date: null,\n        description: ''\n      });\n      setInstallments(initialInstallments);\n    } else {\n      setInstallments([]);\n    }\n    handleInputChange(e);\n  };\n  const handleInstallmentChange = (index, field, value) => {\n    const newInstallments = [...installments];\n    newInstallments[index] = {\n      ...newInstallments[index],\n      [field]: value\n    };\n    setInstallments(newInstallments);\n    handleInstallmentsChange(index, field, value); // Актуализиране на installments в formData\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contract-purchaser-broker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contract-container\",\n      children: [success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"paymentSchema\",\n          children: \"Payment Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"paymentSchema\",\n          name: \"paymentSchemaId\",\n          value: formData.paymentSchemaId,\n          onChange: handlePaymentSchemaChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a payment schema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), paymentSchemas.length > 0 ? paymentSchemas.map(schema => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: schema.id,\n            children: schema.title\n          }, schema.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Loading payment schemas...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"purchaser-container\",\n      children: selectedSchema && installments.map((installment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"installment-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"installment-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `installment${index + 1}`,\n              children: [\"Installment \", index + 1, \" (\", selectedSchema.percentOfInstallments[index], \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control installment-input\",\n              id: `installment${index + 1}`,\n              placeholder: \"\\u20AC\",\n              value: installment.sumInEuros,\n              onChange: e => handleInstallmentChange(index, 'sumInEuros', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"installment-date-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `installmentDate${index + 1}`,\n              children: \"Installment Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: installment.date,\n              onChange: date => handleInstallmentChange(index, 'date', date),\n              dateFormat: \"dd/MM/yyyy\",\n              className: \"form-control installment-date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"broker-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          rows: \"5\",\n          placeholder: \"Add description to this sell\",\n          value: formData.description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentContent, \"1HFykmE+JinXUrXcChkRXmwNmng=\");\n_c = PaymentContent;\nexport default PaymentContent;\nvar _c;\n$RefreshReg$(_c, \"PaymentContent\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","PaymentContent","formData","handleInputChange","paymentSchemas","success","handleInstallmentsChange","_s","selectedSchema","setSelectedSchema","installments","setInstallments","handlePaymentSchemaChange","e","selectedSchemaId","target","value","schema","find","s","id","parseInt","initialInstallments","Array","installmentCount","fill","sumInEuros","date","description","handleInstallmentChange","index","field","newInstallments","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","paymentSchemaId","onChange","length","map","title","disabled","installment","percentOfInstallments","type","placeholder","selected","dateFormat","rows","_c","$RefreshReg$"],"sources":["C:/father project/Build-Ledger/build-ledger-frontend/src/ledger/sell/PaymentContent.js"],"sourcesContent":["// PaymentContent.js\r\nimport React, { useState } from 'react';\r\nimport './CreateSell.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst PaymentContent = ({ formData, handleInputChange, paymentSchemas, success, handleInstallmentsChange }) => {\r\n    const [selectedSchema, setSelectedSchema] = useState(null);\r\n    const [installments, setInstallments] = useState([]);\r\n\r\n    const handlePaymentSchemaChange = (e) => {\r\n        const selectedSchemaId = e.target.value;\r\n        const schema = paymentSchemas.find(s => s.id === parseInt(selectedSchemaId));\r\n        setSelectedSchema(schema);\r\n\r\n        if (schema) {\r\n            const initialInstallments = Array(schema.installmentCount).fill({\r\n                sumInEuros: '',\r\n                date: null,\r\n                description:''\r\n            });\r\n            setInstallments(initialInstallments);\r\n        } else {\r\n            setInstallments([]);\r\n        }\r\n\r\n        handleInputChange(e);\r\n    };\r\n\r\n    const handleInstallmentChange = (index, field, value) => {\r\n        const newInstallments = [...installments];\r\n        newInstallments[index] = {\r\n            ...newInstallments[index],\r\n            [field]: value\r\n        };\r\n        setInstallments(newInstallments);\r\n        handleInstallmentsChange(index, field, value); // Актуализиране на installments в formData\r\n    };\r\n\r\n    return (\r\n        <div className=\"contract-purchaser-broker-container\">\r\n            <div className=\"contract-container\">\r\n                {success && <div className=\"alert alert-success\">{success}</div>}\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"paymentSchema\">Payment Schema</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"paymentSchema\"\r\n                        name=\"paymentSchemaId\"\r\n                        value={formData.paymentSchemaId}\r\n                        onChange={handlePaymentSchemaChange}\r\n                    >\r\n                        <option value=\"\">Select a payment schema</option>\r\n                        {paymentSchemas.length > 0 ? (\r\n                            paymentSchemas.map((schema) => (\r\n                                <option key={schema.id} value={schema.id}>\r\n                                    {schema.title}\r\n                                </option>\r\n                            ))\r\n                        ) : (\r\n                            <option value=\"\" disabled>Loading payment schemas...</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"purchaser-container\">\r\n                {selectedSchema && installments.map((installment, index) => (\r\n                    <div className=\"form-group\" key={index}>\r\n                        <div className=\"installment-row\">\r\n                            <div className=\"installment-field\">\r\n                                <label htmlFor={`installment${index + 1}`}>\r\n                                    Installment {index + 1} ({selectedSchema.percentOfInstallments[index]}%)\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control installment-input\"\r\n                                    id={`installment${index + 1}`}\r\n                                    placeholder=\"€\"\r\n                                    value={installment.sumInEuros}\r\n                                    onChange={(e) => handleInstallmentChange(index, 'sumInEuros', e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"installment-date-field\">\r\n                                <label htmlFor={`installmentDate${index + 1}`}>Installment Date</label>\r\n                                <DatePicker\r\n                                    selected={installment.date}\r\n                                    onChange={(date) => handleInstallmentChange(index, 'date', date)}\r\n                                    dateFormat=\"dd/MM/yyyy\"\r\n                                    className=\"form-control installment-date\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"broker-container\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Notes</label>\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        id=\"description\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Add description to this sell\"\r\n                        value={formData.description}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentContent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}