{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\frontend\\\\build-ledger-frontend\\\\src\\\\building\\\\cooperation\\\\CooperationTemplate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CooperationTemplate = () => {\n  _s();\n  const location = useLocation();\n  const {\n    projectTitle,\n    building\n  } = location.state || {\n    projectTitle: \"Unknown Project\",\n    building: {\n      title: \"Unknown Cooperation\"\n    }\n  };\n  const [formData, setFormData] = useState({\n    title: '',\n    eik: '',\n    address: '',\n    // добавено за адрес\n    parcelArea: '',\n    startDate: new Date(),\n    endDate: new Date(),\n    buildingCount: '',\n    // преименувано от apartments на buildingCount\n    buildingStatus: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleDateChange = (date, name) => {\n    setFormData({\n      ...formData,\n      [name]: date\n    });\n  };\n  const createBuilding = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formData.title) newErrors.title = 'Title is required';\n    if (!formData.eik) newErrors.eik = 'Eik is required';\n    if (!formData.address) newErrors.address = 'Address is required'; // ново поле за адрес\n    if (!formData.parcelArea) newErrors.parcelArea = 'Parcel area is required';\n    if (!formData.startDate) newErrors.startDate = 'Start Date is required';\n    if (!formData.endDate) newErrors.endDate = 'End Date is required';\n    if (!formData.buildingCount) newErrors.buildingCount = 'Building Count is required';\n    if (!formData.buildingStatus) newErrors.buildingStatus = 'Building Status is required';\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      try {\n        // Преобразуваме датите във формат LocalDate, защото бекенда очаква `LocalDate`\n        const startDateFormatted = formData.startDate.toISOString().split('T')[0];\n        const endDateFormatted = formData.endDate.toISOString().split('T')[0];\n\n        // Изпращаме POST заявка към бекенда\n        const response = await axios.post('http://localhost:8080/cooperation/{id', {\n          title: formData.title,\n          eik: formData.eik,\n          address: formData.address,\n          parcelArea: parseFloat(formData.parcelArea),\n          startDate: startDateFormatted,\n          endDate: endDateFormatted,\n          buildingCount: parseInt(formData.buildingCount),\n          buildingStatus: formData.buildingStatus\n        });\n        console.log('Building created successfully:', response.data);\n        setSuccess('Project created successfully!');\n        setErrors({}); // Изчистваме грешките\n\n        // Зануляваме формата при успех\n        setFormData({\n          title: '',\n          eik: '',\n          address: '',\n          // изчистваме адреса\n          parcelArea: '',\n          startDate: new Date(),\n          endDate: new Date(),\n          buildingCount: '',\n          buildingStatus: ''\n        });\n      } catch (error) {\n        console.error('Error creating building:', error);\n        setSuccess(null);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cooperation: \", building.title, \" in \", projectTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buildings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Description: \", building.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rsp:\", building.rsp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Stages: AKT 14, AKT 15\", building.rsp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(CooperationTemplate, \"Eqyfszd/rol8H2gGzXNoN4MdPpU=\", false, function () {\n  return [useLocation];\n});\n_c = CooperationTemplate;\nexport default CooperationTemplate;\nvar _c;\n$RefreshReg$(_c, \"CooperationTemplate\");","map":{"version":3,"names":["React","useState","useLocation","axios","jsxDEV","_jsxDEV","CooperationTemplate","_s","location","projectTitle","building","state","title","formData","setFormData","eik","address","parcelArea","startDate","Date","endDate","buildingCount","buildingStatus","errors","setErrors","success","setSuccess","handleInputChange","e","name","value","target","handleDateChange","date","createBuilding","preventDefault","newErrors","Object","keys","length","startDateFormatted","toISOString","split","endDateFormatted","response","post","parseFloat","parseInt","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","description","rsp","_c","$RefreshReg$"],"sources":["C:/father project/software/frontend/build-ledger-frontend/src/building/cooperation/CooperationTemplate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios'; \r\n\r\n\r\nconst CooperationTemplate = () => {\r\n    const location = useLocation();\r\n    const { projectTitle, building } = location.state || { projectTitle: \"Unknown Project\", building: { title: \"Unknown Cooperation\" } };\r\n    \r\n    \r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        eik: '',\r\n        address: '', // добавено за адрес\r\n        parcelArea: '',\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        buildingCount: '', // преименувано от apartments на buildingCount\r\n        buildingStatus: '',\r\n      });\r\n      const [errors, setErrors] = useState({});\r\n      const [success, setSuccess] = useState(null);\r\n    \r\n      const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n      };\r\n    \r\n      const handleDateChange = (date, name) => {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: date,\r\n        });\r\n      };\r\n      const createBuilding = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const newErrors = {};\r\n        if (!formData.title) newErrors.title = 'Title is required';\r\n        if (!formData.eik) newErrors.eik = 'Eik is required';\r\n        if (!formData.address) newErrors.address = 'Address is required'; // ново поле за адрес\r\n        if (!formData.parcelArea) newErrors.parcelArea = 'Parcel area is required';\r\n        if (!formData.startDate) newErrors.startDate = 'Start Date is required';\r\n        if (!formData.endDate) newErrors.endDate = 'End Date is required';\r\n        if (!formData.buildingCount) newErrors.buildingCount = 'Building Count is required';\r\n        if (!formData.buildingStatus) newErrors.buildingStatus = 'Building Status is required';\r\n    \r\n        if (Object.keys(newErrors).length > 0) {\r\n          setErrors(newErrors);\r\n        } else {\r\n          try {\r\n            // Преобразуваме датите във формат LocalDate, защото бекенда очаква `LocalDate`\r\n            const startDateFormatted = formData.startDate.toISOString().split('T')[0];\r\n            const endDateFormatted = formData.endDate.toISOString().split('T')[0];\r\n    \r\n            // Изпращаме POST заявка към бекенда\r\n            const response = await axios.post('http://localhost:8080/cooperation/{id', {\r\n                title: formData.title,\r\n                eik: formData.eik,\r\n                address: formData.address,\r\n                parcelArea: parseFloat(formData.parcelArea),\r\n                startDate: startDateFormatted,\r\n                endDate: endDateFormatted,\r\n                buildingCount: parseInt(formData.buildingCount),\r\n                buildingStatus: formData.buildingStatus,\r\n              });\r\n              \r\n    \r\n            console.log('Building created successfully:', response.data);\r\n            setSuccess('Project created successfully!');\r\n            setErrors({}); // Изчистваме грешките\r\n    \r\n            // Зануляваме формата при успех\r\n            setFormData({\r\n              title: '',\r\n              eik: '',\r\n              address: '', // изчистваме адреса\r\n              parcelArea: '',\r\n              startDate: new Date(),\r\n              endDate: new Date(),\r\n              buildingCount: '',\r\n              buildingStatus: '',\r\n            });\r\n          } catch (error) {\r\n            console.error('Error creating building:', error);\r\n            setSuccess(null);\r\n          }\r\n        }\r\n      };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cooperation: {building.title} in {projectTitle}</h1>\r\n            <div className=\"buildings-container\">\r\n            <div>Description: {building.description}</div>\r\n            <div>Rsp:{building.rsp}</div>\r\n            <div>Stages: AKT 14, AKT 15{building.rsp}</div>\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CooperationTemplate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}