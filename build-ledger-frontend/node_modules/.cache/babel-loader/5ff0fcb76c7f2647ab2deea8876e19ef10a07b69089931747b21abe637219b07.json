{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\Build-Ledger\\\\build-ledger-frontend\\\\src\\\\parking-places\\\\AllParkingPlacesComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../apartment/Apartment.css';\nimport ParkingPlaceComponent from './ParkingPlaceComponent';\nimport UpdateParkingPlace from './UpdateParkingPlace'; // Добавяне на UpdateParkingPlace\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllParkingPlaces = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [parkingPlaces, setParkingPlaces] = useState([]);\n  const [floors, setFloors] = useState([]); // Поддръжка на етажи\n  const [selectedParkingPlace, setSelectedParkingPlace] = useState(null); // Избрано паркомясто\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Фетчване на паркоместа и етажи\n  const fetchParkingPlacesAndFloors = async () => {\n    try {\n      const [parkingPlacesResponse, floorsResponse] = await Promise.all([axios.get(`http://localhost:8080/parking-places/${id}`), axios.get(`http://localhost:8080/floors/${id}`)]);\n      setParkingPlaces(parkingPlacesResponse.data);\n      setFloors(floorsResponse.data);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch parking places and floors.');\n    }\n  };\n  useEffect(() => {\n    fetchParkingPlacesAndFloors();\n  }, [id]);\n\n  // Функция за отваряне на модала за актуализиране на паркомясто\n  const handleAddParkingPlace = parkingPlace => {\n    setSelectedParkingPlace(parkingPlace);\n  };\n\n  // Затваряне на модала\n  const handleCloseModal = () => {\n    setSelectedParkingPlace(null);\n  };\n\n  // Навигация към добавяне на ново паркомясто\n  const handleAddNewParkingPlace = () => {\n    navigate(`/parking-places/add/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Parking Places\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"apartment-container\",\n      children: [parkingPlaces.map(parkingPlace => /*#__PURE__*/_jsxDEV(ParkingPlaceComponent, {\n        parkingPlace: parkingPlace,\n        projectTitle: `Cooperation ${id}`,\n        onAddParkingPlace: () => handleAddParkingPlace(parkingPlace) // Подаваме правилната функция за модала\n      }, parkingPlace.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card add-apartment-card\",\n        onClick: handleAddNewParkingPlace,\n        style: {\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"64\",\n          height: \"64\",\n          fill: \"currentColor\",\n          className: \"bi bi-plus\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), selectedParkingPlace && /*#__PURE__*/_jsxDEV(UpdateParkingPlace, {\n      show: !!selectedParkingPlace,\n      handleClose: handleCloseModal,\n      parkingPlaceNumber: selectedParkingPlace.number,\n      cooperationNumber: id,\n      floors: floors,\n      parkingId: selectedParkingPlace.id,\n      refreshParkingPlaces: fetchParkingPlacesAndFloors // Предаваме функцията за презареждане\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AllParkingPlaces, \"ecpcnFbA1ajP0zZm6GGNyl6I2sg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AllParkingPlaces;\nexport default AllParkingPlaces;\nvar _c;\n$RefreshReg$(_c, \"AllParkingPlaces\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","ParkingPlaceComponent","UpdateParkingPlace","jsxDEV","_jsxDEV","AllParkingPlaces","_s","id","parkingPlaces","setParkingPlaces","floors","setFloors","selectedParkingPlace","setSelectedParkingPlace","error","setError","navigate","fetchParkingPlacesAndFloors","parkingPlacesResponse","floorsResponse","Promise","all","get","data","err","console","handleAddParkingPlace","parkingPlace","handleCloseModal","handleAddNewParkingPlace","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","projectTitle","onAddParkingPlace","onClick","style","cursor","display","alignItems","justifyContent","xmlns","width","height","fill","viewBox","d","show","handleClose","parkingPlaceNumber","number","cooperationNumber","parkingId","refreshParkingPlaces","_c","$RefreshReg$"],"sources":["C:/father project/software/Build-Ledger/build-ledger-frontend/src/parking-places/AllParkingPlacesComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../apartment/Apartment.css';\r\nimport ParkingPlaceComponent from './ParkingPlaceComponent';\r\nimport UpdateParkingPlace from './UpdateParkingPlace'; // Добавяне на UpdateParkingPlace\r\n\r\nconst AllParkingPlaces = () => {\r\n    const { id } = useParams();\r\n    const [parkingPlaces, setParkingPlaces] = useState([]);\r\n    const [floors, setFloors] = useState([]); // Поддръжка на етажи\r\n    const [selectedParkingPlace, setSelectedParkingPlace] = useState(null); // Избрано паркомясто\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    // Фетчване на паркоместа и етажи\r\n    const fetchParkingPlacesAndFloors = async () => {\r\n        try {\r\n            const [parkingPlacesResponse, floorsResponse] = await Promise.all([\r\n                axios.get(`http://localhost:8080/parking-places/${id}`),\r\n                axios.get(`http://localhost:8080/floors/${id}`)\r\n            ]);\r\n            setParkingPlaces(parkingPlacesResponse.data);\r\n            setFloors(floorsResponse.data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to fetch parking places and floors.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchParkingPlacesAndFloors();\r\n    }, [id]);\r\n\r\n    // Функция за отваряне на модала за актуализиране на паркомясто\r\n    const handleAddParkingPlace = (parkingPlace) => {\r\n        setSelectedParkingPlace(parkingPlace);\r\n    };\r\n\r\n    // Затваряне на модала\r\n    const handleCloseModal = () => {\r\n        setSelectedParkingPlace(null);\r\n    };\r\n\r\n    // Навигация към добавяне на ново паркомясто\r\n    const handleAddNewParkingPlace = () => {\r\n        navigate(`/parking-places/add/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Parking Places</h1>\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            <div className=\"apartment-container\">\r\n                {parkingPlaces.map(parkingPlace => (\r\n                    <ParkingPlaceComponent\r\n                        key={parkingPlace.id}\r\n                        parkingPlace={parkingPlace}\r\n                        projectTitle={`Cooperation ${id}`}\r\n                        onAddParkingPlace={() => handleAddParkingPlace(parkingPlace)} // Подаваме правилната функция за модала\r\n                    />\r\n                ))}\r\n                <div \r\n                    className=\"project-card add-apartment-card\"\r\n                    onClick={handleAddNewParkingPlace} \r\n                    style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" fill=\"currentColor\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4\"/>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Модал за актуализиране на паркомясто */}\r\n            {selectedParkingPlace && (\r\n                <UpdateParkingPlace\r\n                    show={!!selectedParkingPlace}\r\n                    handleClose={handleCloseModal}\r\n                    parkingPlaceNumber={selectedParkingPlace.number}\r\n                    cooperationNumber={id}\r\n                    floors={floors}\r\n                    parkingId={selectedParkingPlace.id}\r\n                    refreshParkingPlaces={fetchParkingPlacesAndFloors} // Предаваме функцията за презареждане\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AllParkingPlaces;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}