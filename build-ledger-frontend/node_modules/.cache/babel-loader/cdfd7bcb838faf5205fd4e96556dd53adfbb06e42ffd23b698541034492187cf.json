{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\Build-Ledger\\\\build-ledger-frontend\\\\src\\\\ledger\\\\sell\\\\CreateSell.js\",\n  _s = $RefreshSig$();\n// CreateSell.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CreateSell.css';\nimport axios from 'axios';\nimport PaymentContent from './PaymentContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateSell = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [formData, setFormData] = useState({\n    id: id,\n    paymentSchemaId: '',\n    installments: [] // Масив за вноските\n  });\n  const [paymentSchemas, setPaymentSchemas] = useState([]);\n  const [success, setSuccess] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const paymentSchemasResponse = await axios.get('http://localhost:8080/payment-schema');\n        setPaymentSchemas(paymentSchemasResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleInstallmentsChange = (index, field, value) => {\n    const newInstallments = [...formData.installments];\n    if (!newInstallments[index]) {\n      newInstallments[index] = {\n        sumInEuros: '',\n        date: null\n      };\n    }\n    newInstallments[index][field] = value;\n    setFormData({\n      ...formData,\n      installments: newInstallments\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Form Data:', formData);\n  };\n  const createSell = async () => {\n    try {\n      // Подготвяме данни без `installment` и `installmentDates` полетата\n      const dataToSend = {\n        id: formData.id,\n        paymentSchemaId: formData.paymentSchemaId,\n        installments: formData.installments.filter(installment => installment.date) // Изпращаме само попълнените вноски\n        .map(installment => ({\n          sumInEuros: parseFloat(installment.sumInEuros),\n          date: installment.date ? installment.date.toISOString().split('T')[0] : null\n        }))\n      };\n      const response = await axios.post(`http://localhost:8080/cooperation/${id}/create-sell`, dataToSend, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('POST request successful', response.data);\n      setSuccess('Sell created successfully!');\n    } catch (error) {\n      console.error('Error creating sell', error);\n      setSuccess(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-sell-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Sell\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(PaymentContent, {\n        formData: formData,\n        handleInputChange: handleInputChange,\n        paymentSchemas: paymentSchemas,\n        success: success,\n        handleInstallmentsChange: handleInstallmentsChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary mt-3\",\n        onClick: createSell,\n        children: \"Create Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateSell, \"2zN1bDz1qVaw4da2ksMi+mefpbI=\", false, function () {\n  return [useParams];\n});\n_c = CreateSell;\nexport default CreateSell;\nvar _c;\n$RefreshReg$(_c, \"CreateSell\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","PaymentContent","jsxDEV","_jsxDEV","CreateSell","_s","id","formData","setFormData","paymentSchemaId","installments","paymentSchemas","setPaymentSchemas","success","setSuccess","fetchData","paymentSchemasResponse","get","data","error","console","handleInputChange","e","name","value","target","handleInstallmentsChange","index","field","newInstallments","sumInEuros","date","handleSubmit","preventDefault","log","createSell","dataToSend","filter","installment","map","parseFloat","toISOString","split","response","post","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","_c","$RefreshReg$"],"sources":["C:/father project/Build-Ledger/build-ledger-frontend/src/ledger/sell/CreateSell.js"],"sourcesContent":["// CreateSell.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CreateSell.css';\r\nimport axios from 'axios';\r\nimport PaymentContent from './PaymentContent';\r\n\r\nconst CreateSell = () => {\r\n    const { id } = useParams();\r\n\r\n    const [formData, setFormData] = useState({\r\n        id: id,\r\n        paymentSchemaId: '',\r\n        installments: [] // Масив за вноските\r\n    \r\n    });\r\n\r\n    const [paymentSchemas, setPaymentSchemas] = useState([]);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const paymentSchemasResponse = await axios.get('http://localhost:8080/payment-schema');\r\n                setPaymentSchemas(paymentSchemasResponse.data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [id]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleInstallmentsChange = (index, field, value) => {\r\n        const newInstallments = [...formData.installments];\r\n        if (!newInstallments[index]) {\r\n            newInstallments[index] = { sumInEuros: '', date: null };\r\n        }\r\n        newInstallments[index][field] = value;\r\n\r\n        setFormData({\r\n            ...formData,\r\n            installments: newInstallments\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Form Data:', formData);\r\n    };\r\n\r\n    const createSell = async () => {\r\n        try {\r\n            // Подготвяме данни без `installment` и `installmentDates` полетата\r\n            const dataToSend = {\r\n                id: formData.id,\r\n                paymentSchemaId: formData.paymentSchemaId,\r\n                installments: formData.installments\r\n                    .filter(installment => installment.date) // Изпращаме само попълнените вноски\r\n                    .map(installment => ({\r\n                        sumInEuros: parseFloat(installment.sumInEuros),\r\n                        date: installment.date ? installment.date.toISOString().split('T')[0] : null\r\n                    }))\r\n            };\r\n\r\n            const response = await axios.post(\r\n                `http://localhost:8080/cooperation/${id}/create-sell`,\r\n                dataToSend,\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                }\r\n            );\r\n\r\n            console.log('POST request successful', response.data);\r\n            setSuccess('Sell created successfully!');\r\n        } catch (error) {\r\n            console.error('Error creating sell', error);\r\n            setSuccess(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-sell-container\">\r\n            <h1>Create Sell</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <PaymentContent\r\n                    formData={formData}\r\n                    handleInputChange={handleInputChange}\r\n                    paymentSchemas={paymentSchemas}\r\n                    success={success}\r\n                    handleInstallmentsChange={handleInstallmentsChange}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-primary mt-3\" onClick={createSell}>\r\n                    Create Sell\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateSell;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}