{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\frontend\\\\build-ledger-frontend\\\\src\\\\parcel\\\\ParcelTemplate.js\",\n  _s = $RefreshSig$();\n// ParcelTemplate.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParcelTemplate = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // ID на парцела\n  const [parcel, setParcel] = useState(null); // Стейт за парцел\n  const [project, setProject] = useState(null); // Стейт за проект\n  const [error, setError] = useState(null); // За грешки\n\n  useEffect(() => {\n    const fetchParcelAndProject = async () => {\n      try {\n        // Заявка за парцела по ID\n        const parcelResponse = await axios.get(`http://localhost:8080/parcels/${id}`);\n        setParcel(parcelResponse.data); // Запазване на данните за парцела\n\n        // Взимане на проекта свързан с парцела\n        const projectId = parcelResponse.data.projectId; // Предполагам, че парцелът има поле projectId\n        const projectResponse = await axios.get(`http://localhost:8080/projects/${projectId}`);\n        setProject(projectResponse.data); // Запазване на данните за проекта\n      } catch (error) {\n        console.error('Error fetching parcel or project:', error);\n        setError('Error fetching data');\n      }\n    };\n    fetchParcelAndProject();\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  if (!parcel || !project) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"In parcel of project: \", project.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ParcelTemplate, \"ybtQ2YSCDb7YaWK8Ixe8MvEp7RY=\", false, function () {\n  return [useParams];\n});\n_c = ParcelTemplate;\nexport default ParcelTemplate;\nvar _c;\n$RefreshReg$(_c, \"ParcelTemplate\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ParcelTemplate","_s","id","parcel","setParcel","project","setProject","error","setError","fetchParcelAndProject","parcelResponse","get","data","projectId","projectResponse","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["C:/father project/software/frontend/build-ledger-frontend/src/parcel/ParcelTemplate.js"],"sourcesContent":["// ParcelTemplate.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ParcelTemplate = () => {\r\n    const { id } = useParams(); // ID на парцела\r\n    const [parcel, setParcel] = useState(null); // Стейт за парцел\r\n    const [project, setProject] = useState(null); // Стейт за проект\r\n    const [error, setError] = useState(null); // За грешки\r\n\r\n    useEffect(() => {\r\n        const fetchParcelAndProject = async () => {\r\n            try {\r\n                // Заявка за парцела по ID\r\n                const parcelResponse = await axios.get(`http://localhost:8080/parcels/${id}`);\r\n                setParcel(parcelResponse.data); // Запазване на данните за парцела\r\n\r\n                // Взимане на проекта свързан с парцела\r\n                const projectId = parcelResponse.data.projectId; // Предполагам, че парцелът има поле projectId\r\n                const projectResponse = await axios.get(`http://localhost:8080/projects/${projectId}`);\r\n                setProject(projectResponse.data); // Запазване на данните за проекта\r\n            } catch (error) {\r\n                console.error('Error fetching parcel or project:', error);\r\n                setError('Error fetching data');\r\n            }\r\n        };\r\n\r\n        fetchParcelAndProject();\r\n    }, [id]);\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!parcel || !project) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>In parcel of project: {project.title}</h1> {/* Заглавие с името на проекта */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParcelTemplate;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMc,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACA;QACA,MAAMC,cAAc,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,iCAAiCT,EAAE,EAAE,CAAC;QAC7EE,SAAS,CAACM,cAAc,CAACE,IAAI,CAAC,CAAC,CAAC;;QAEhC;QACA,MAAMC,SAAS,GAAGH,cAAc,CAACE,IAAI,CAACC,SAAS,CAAC,CAAC;QACjD,MAAMC,eAAe,GAAG,MAAMjB,KAAK,CAACc,GAAG,CAAC,kCAAkCE,SAAS,EAAE,CAAC;QACtFP,UAAU,CAACQ,eAAe,CAACF,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZQ,OAAO,CAACR,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDC,QAAQ,CAAC,qBAAqB,CAAC;MACnC;IACJ,CAAC;IAEDC,qBAAqB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIK,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAiB,QAAA,EAAIT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,IAAI,CAACjB,MAAM,IAAI,CAACE,OAAO,EAAE;IACrB,oBAAON,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,GAAI,wBAAsB,EAACX,OAAO,CAACgB,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvCID,cAAc;EAAA,QACDJ,SAAS;AAAA;AAAA0B,EAAA,GADtBtB,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}