{"ast":null,"code":"var _jsxFileName = \"C:\\\\father project\\\\software\\\\frontend\\\\build-ledger-frontend\\\\src\\\\parcel\\\\ParcelTemplate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParcelTemplate = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // ID на парцела\n  const [projectTitle, setProjectTitle] = useState(null); // Стейт за заглавие на проект\n  const [error, setError] = useState(null); // За грешки\n\n  useEffect(() => {\n    const fetchProjectTitle = async () => {\n      try {\n        // Заявка за заглавие на проекта по ID на парцел\n        const response = await axios.get(`http://localhost:8080/projects/parcel/${id}`);\n        setProjectTitle(response.data); // Запазване на заглавието на проекта\n      } catch (error) {\n        console.error('Error fetching project title:', error);\n        setError('Error fetching data');\n      }\n    };\n    fetchProjectTitle();\n  }, [id]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  if (!projectTitle) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"In parcel of project: \", projectTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(ParcelTemplate, \"DoZ1MjvVE0NbZPMAqoq+UfVeQH4=\", false, function () {\n  return [useParams];\n});\n_c = ParcelTemplate;\nexport default ParcelTemplate;\nvar _c;\n$RefreshReg$(_c, \"ParcelTemplate\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","ParcelTemplate","_s","id","projectTitle","setProjectTitle","error","setError","fetchProjectTitle","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/father project/software/frontend/build-ledger-frontend/src/parcel/ParcelTemplate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ParcelTemplate = () => {\r\n    const { id } = useParams(); // ID на парцела\r\n    const [projectTitle, setProjectTitle] = useState(null); // Стейт за заглавие на проект\r\n    const [error, setError] = useState(null); // За грешки\r\n\r\n    useEffect(() => {\r\n        const fetchProjectTitle = async () => {\r\n            try {\r\n                // Заявка за заглавие на проекта по ID на парцел\r\n                const response = await axios.get(`http://localhost:8080/projects/parcel/${id}`);\r\n                setProjectTitle(response.data); // Запазване на заглавието на проекта\r\n            } catch (error) {\r\n                console.error('Error fetching project title:', error);\r\n                setError('Error fetching data');\r\n            }\r\n        };\r\n\r\n        fetchProjectTitle();\r\n    }, [id]);\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!projectTitle) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>In parcel of project: {projectTitle}</h1> {/* Заглавие с името на проекта */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ParcelTemplate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yCAAyCP,EAAE,EAAE,CAAC;QAC/EE,eAAe,CAACI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACZM,OAAO,CAACN,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,QAAQ,CAAC,qBAAqB,CAAC;MACnC;IACJ,CAAC;IAEDC,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,IAAIG,KAAK,EAAE;IACP,oBAAON,OAAA;MAAAa,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,IAAI,CAACb,YAAY,EAAE;IACf,oBAAOJ,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;EAEA,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,GAAI,wBAAsB,EAACT,YAAY;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAACf,EAAA,CAjCID,cAAc;EAAA,QACDJ,SAAS;AAAA;AAAAqB,EAAA,GADtBjB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}